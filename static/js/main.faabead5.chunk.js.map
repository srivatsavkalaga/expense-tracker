{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","amount","setAmount","useState","type","setType","editMode","setEditMode","editAmount","setEditAmount","entries","setEntries","stored","localStorage","getItem","JSON","parse","useEffect","setItem","stringify","handleSaveEdit","prev","_objectSpread","Number","React","createElement","className","onSubmit","e","preventDefault","value","onChange","target","name","style","marginTop","Object","map","_ref","key","marginBottom","onClick","handleEdit","category","handleDelete","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.faabead5.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [amount, setAmount] = useState('');\n  const [type, setType] = useState(\"Food & Groceries\");\n  const [editMode, setEditMode] = useState(null); // category being edited\n  const [editAmount, setEditAmount] = useState('');\n\n  const STORAGE_KEY = \"simple_expense_entries\";\n\n  const [entries, setEntries] = useState(() => {\n    const stored = localStorage.getItem(STORAGE_KEY);\n    return stored ? JSON.parse(stored) : {\n      \"Food & Groceries\": 0,\n      \"Travel\": 0,\n      \"Others\": 0\n    };\n  });\n\n  useEffect(() => {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(entries));\n  }, [entries]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!amount) return;\n\n    setEntries(prev => ({\n      ...prev,\n      [type]: Number(prev[type]) + Number(amount)\n    }));\n\n    setAmount('');\n    setType(\"Food & Groceries\");\n  };\n\n  const handleDelete = (category) => {\n    setEntries(prev => ({\n      ...prev,\n      [category]: 0\n    }));\n  };\n\n  const handleEdit = (category) => {\n    setEditMode(category);\n    setEditAmount(entries[category]);\n  };\n\n  const handleSaveEdit = () => {\n    if (!editAmount) return;\n    setEntries(prev => ({\n      ...prev,\n      [editMode]: Number(editAmount)\n    }));\n    setEditMode(null);\n    setEditAmount('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>EXPENSE TRACKER</h1>\n\n      <div className=\"budgetEntryCard\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"budgetEntry\">\n            <label>Enter Expense (Rs): </label>\n            <input\n              type=\"number\"\n              value={amount}\n              onChange={(e) => setAmount(e.target.value)}\n            />\n          </div>\n          <div className=\"selectType\">\n            <label>Select Type of Expense: </label>\n            <select name=\"expenseType\" value={type} onChange={(e) => setType(e.target.value)}>\n              <option value=\"Food & Groceries\">Food & Groceries</option>\n              <option value=\"Travel\">Travel</option>\n              <option value=\"Others\">Others</option>\n            </select>\n          </div>\n          <button type=\"submit\">Submit</button>\n        </form>\n        <p>Total Expenses: {entries[\"Food & Groceries\"]+ entries[\"Travel\"]+ entries[\"Others\"]}</p>\n        <div style={{ marginTop: '30px' }}>\n          <h2>Expense Entries</h2>\n\n          {Object.entries(entries).map(([key, value]) => (\n            <div key={key} style={{ marginBottom: '10px' }}>\n              <strong>{key}</strong>: Rs. {value}{\" \"}\n              <button onClick={() => handleEdit(key)}>Edit</button>\n              <button onClick={() => handleDelete(key)}>Delete</button>\n\n              {editMode === key && (\n                <div style={{ marginTop: '5px' }}>\n                  <input\n                    type=\"number\"\n                    value={editAmount}\n                    onChange={(e) => setEditAmount(e.target.value)}\n                  />\n                  <button onClick={handleSaveEdit}>Save</button>\n                  <button onClick={() => setEditMode(null)}>Cancel</button>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}